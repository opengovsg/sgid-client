name: ci
on:
  push:
  pull_request:
    types: [opened, reopened]
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - run: npx lockfile-lint --type npm --path package-lock.json --validate-https --allowed-hosts npm
      - run: npm run lint
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - run: npm test

  # conformance-test:
  #   name: Conformance tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '16.x'
  #     - name: Use Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #     - name: Cache Node.js modules
  #       uses: actions/cache@v2
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-node-
  #           ${{ runner.OS }}-
  #     - run: npm ci
  #     - run: npm build
  #     - run: cd test/conformance/demo-rp
  #     - run: npm ci
  #     - run: npm run dev & disown
  #     - run: cd ../suite
  #     - run: python3 -m venv .venv
  #     - run: source .venv/bin/activate
  #     - run: pip install -r requirements.txt
  #     - run: python test.py
